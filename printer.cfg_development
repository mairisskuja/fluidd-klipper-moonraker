#Test build configuration for Voron Switchwire / Ender SW conversion with SKR Mini E3 V2.0 [MC]

[include stealthburner_leds.cfg]

[stepper_x]
step_pin: PB13
dir_pin: PB12
enable_pin: !PB14
microsteps = 16
rotation_distance = 40
endstop_pin: ^PC0
position_endstop: 235
position_max: 235
homing_speed: 150

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.5
#hold_current: 0.3
interpolate: true
stealthchop_threshold: 235

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
endstop_pin: ^PC1
microsteps = 16
rotation_distance: 40
position_endstop: 235
position_max: 235
position_min: -16
homing_speed: 150

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.5
#hold_current: 0.3
interpolate: true
stealthchop_threshold: 250

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
endstop_pin: ^PC2
#endstop_pin: probe:z_virtual_endstop
microsteps = 16
rotation_distance = 40
position_endstop: 0
position_max: 250
position_min: -3.0
homing_speed: 50

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.5
#hold_current: 0.3
stealthchop_threshold: 250

#[force_move] - enabled on stepper configuration tests only
#enable_force_move: true

[bed_mesh]
speed: 150
horizontal_move_z: 5
mesh_min: 20,13.5
mesh_max: 230,224.5
probe_count: 6
relative_reference_index: 17
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0

#[servo SideSwipe]
#pin: PA1 #Probe Connection on SKR mini E3 V2
#initial_angle: 0
#maximum_servo_angle = 180
#minimum_pulse_width = 0.0005
#maximum_pulse_width = 0.0024

#[probe]
#pin: ^PC14
#x_offset: 0.0
#y_offset: 25.0
#z_offset: 1.85
#speed: 5

[probe]
pin: ^PC14 #E0-Stop Connection on SKR mini E3 V2
z_offset: 2.329 #Measure per your specific setup
x_offset: -1
y_offset: -28
speed: 3.0
samples: 2
samples_tolerance_retries: 6

[bed_mesh]
horizontal_move_z: 5
speed: 120
mesh_min: 4,2
mesh_max: 109, 89
probe_count: 3,3
#algorithm: bicubic
relative_reference_index: 4 #Varies based on probe count for 3x3 = 4, for 5x5 = 12

[homing_override] #Use this homing override section only if using probe to home Z (See above [stepper_z])
set_position_z: 5
gcode:
    G1 Z10 #Move bed down 10
    G28 X0 Y0 #Home x y
    G1 X60 Y80 F4000 #Move to center of bed
    PROBE_OUT #Deploy Probe
    G28 Z0 #Home z with probe
    G1 Z10 #Move bed down 10
    PROBE_IN #Retract Probe

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
    G28
    AUTO_BED_MESH
    BED_MESH_PROFILE LOAD=default
    G1 F8000
    G1 X40 Y11 Z5 F3000
    G92 E0
    G0 Z0.5
    G1 X60 Y11 E7 F200
    G92 E0
    G1 X80 Y11 F5000

[gcode_macro SERVO_OUT] #Debug Deploy Arm
gcode:
    SET_SERVO SERVO=SideSwipe ANGLE=90

[gcode_macro SERVO_IN] #Debug Retract Arm
gcode:
    SET_SERVO SERVO=SideSwipe ANGLE=0
    SET_SERVO SERVO=SideSwipe WIDTH=0

[gcode_macro PROBE_OUT]
gcode:
    G1 X60 Y60 Z10 F4000
    SET_SERVO SERVO=SideSwipe ANGLE=90
    G1 X77 Y36 F4000
    G1 X98 Y36 F1000
    G4 P300
    G1 X61 Y36 F4000
    G4 P300
    SET_SERVO SERVO=SideSwipe ANGLE=0
    SET_SERVO SERVO=SideSwipe WIDTH=0
    G1 X60 Y60 F4000
    G4 P300

[gcode_macro PROBE_IN]
gcode:
    G1 Z10
    G1 X61 Y50 F4000
    SET_SERVO SERVO=SideSwipe ANGLE=90
    G1 X71 Y36 F4000
    G1 X98 Y36 F1000
    G4 P300
    G1 X111 Y36 F2000
    G4 P300
    G1 X111 Y48 F4000
    G1 X60 Y60 F4000
    SET_SERVO SERVO=SideSwipe ANGLE=0
    SET_SERVO SERVO=SideSwipe WIDTH=0
    G4 P300

[gcode_macro AUTO_BED_MESH]
gcode:
    PROBE_OUT
    BED_MESH_CALIBRATE
    PROBE_IN


[extruder]
step_pin: PB3
dir_pin: PB4
enable_pin: !PD2
heater_pin: PC8
sensor_pin: PA0
max_extrude_only_distance: 100.0
microsteps: 128
rotation_distance: 36.1182 #Orbiter
gear_ratio: 7.5:1  #Orbiter
nozzle_diameter: 0.400
filament_diameter: 1.750
sensor_type: ATC Semitec 104GT-2
min_temp: 0
max_temp: 300
control = pid
pid_kp = 18.973
pid_ki = 0.771
pid_kd = 116.683
min_extrude_temp: 200
max_extrude_only_distance: 101
max_extrude_cross_section: 2
#pressure_advance: 0.047; in Json CFG
#pressure_advance: 0.05; in Hymness CFG

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.7
#hold_current: 0.3
interpolate: true
#hold_current: 0.3

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC3
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[heater_fan nozzle_cooling_fan]
pin: PC7

[fan]
pin: PC6

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_38FFD7054253393817700957-if00
restart_method: command

[printer]
kinematics: corexz
max_velocity: 200
max_accel: 1000
max_z_velocity: 50
max_z_accel: 1000
square_corner_velocity: 4.0

[static_digital_output usb_pullup_enable]
pins: !PA14

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5, EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB15, EXP1_10=<5V>

[display]
#    FYSETC mini12864 LCD Display v2.1
lcd_type: uc1701
cs_pin: PB8
a0_pin: PB15
rst_pin: PB9
encoder_pins: ^PA9,^PA10
click_pin: ^!PB5
contrast: 63
spi_software_sclk_pin: PA5
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6

[neopixel fysetc_mini12864]
#    To control Neopixel RGB in mini12864 display
pin: PA15
chain_count: 3
initial_RED: 1.0
initial_GREEN: 0.0
initial_BLUE: 0.0
color_order: RGB

[display_glyph bed]
data:
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ...**********...
  ..*..........*..
  .*............*.
  *..............*
  ****************
  ................

[display_glyph bed_heat1]
data:
  ................
  ......*...*.....
  ......*...*.....
  .....*...*......
  .....*...*......
  ......*...*.....
  ......*...*.....
  .....*...*......
  .....*...*......
  ................
  ...**********...
  ..*..........*..
  .*............*.
  *..............*
  ****************
  ................

[display_glyph bed_heat2]
data:
  ................
  .....*...*......
  .....*...*......
  ......*...*.....
  ......*...*.....
  .....*...*......
  .....*...*......
  ......*...*.....
  ......*...*.....
  ................
  ...**********...
  ..*..........*..
  .*............*.
  *..............*
  ****************
  ................

[display_glyph feedrate]
data:
  ................
  ................
  ................
  ......******....
  ....**********..
  ...****....****.
  ..***........**.
  .***..........*.
  .**..*..........
  ***...*.........
  **.....*........
  **......**......
  **......***.....
  **.......**.....
  ................
  ................

[gcode_macro G29]
gcode:
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE=default
    BED_MESH_PROFILE LOAD=default

[virtual_sdcard]
path: ~/gcode_files

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 10.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100
