#Test build configuration for Voron Switchwire / Ender SW conversion with SKR Mini E3 V2.0 [MC]

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps = 16
rotation_distance = 40
endstop_pin: ^PC0
position_endstop: 0
position_max: 250
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 250

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
endstop_pin: probe:z_virtual_endstop
microsteps = 16
rotation_distance = 8
position_max: 250
position_min: -5
homing_speed: 10
#homing_positive_dir: false

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 5

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
endstop_pin: ^PC1
microsteps = 16
rotation_distance = 40
position_endstop: 0
position_max: 250
position_min: -16
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 250

[extruder]
step_pin: PB3
dir_pin: PB4
enable_pin: !PD2
max_extrude_only_distance: 100.0
max_extrude_cross_section: 50.0
microsteps = 16
#rotation_distance = 40 ; pre calibrated value
rotation_distance = 27.75
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 260

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
hold_current: 0.500
stealthchop_threshold: 5

[bltouch]
sensor_pin: ^PC14
control_pin: PA1
pin_move_time: 0.5
pin_up_touch_mode_reports_triggered: false
stow_on_each_sample: false
probe_with_touch_mode: true
x_offset: -28 
y_offset: 4
z_offset: 2.49
speed: 20
lift_speed: 5
samples: 3
sample_retract_dist: 5
samples_result: median
samples_tolerance: 0.05
samples_tolerance_retries: 3

[safe_z_home]
home_xy_position: 145,117
speed: 150
z_hop: 10
z_hop_speed: 20

[force_move]
enable_force_move: true

[bed_mesh]
speed: 200
horizontal_move_z: 5
mesh_min: 35,35
mesh_max: 220, 210
probe_count: 5,3

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC3
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[heater_fan nozzle_cooling_fan]
pin: PC7

[fan]
pin: PC6

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_38FFD7054253393817700957-if00
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[static_digital_output usb_pullup_enable]
pins: !PA14

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5, EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB15, EXP1_10=<5V>

[display]
#    FYSETC mini12864 LCD Display v2.1
lcd_type: uc1701
cs_pin: PB8
a0_pin: PB15
rst_pin: PB9
encoder_pins: ^PA9,^PA10
click_pin: ^!PB5
contrast: 63
spi_software_sclk_pin: PA5
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6

[neopixel fysetc_mini12864]
#    To control Neopixel RGB in mini12864 display
pin: PA15
chain_count: 3
initial_RED: 1.0
initial_GREEN: 0.0
initial_BLUE: 0.0
color_order: RGB

[display_glyph bed]
data:
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ................
  ...**********...
  ..*..........*..
  .*............*.
  *..............*
  ****************
  ................

[display_glyph bed_heat1]
data:
  ................
  ......*...*.....
  ......*...*.....
  .....*...*......
  .....*...*......
  ......*...*.....
  ......*...*.....
  .....*...*......
  .....*...*......
  ................
  ...**********...
  ..*..........*..
  .*............*.
  *..............*
  ****************
  ................

[display_glyph bed_heat2]
data:
  ................
  .....*...*......
  .....*...*......
  ......*...*.....
  ......*...*.....
  .....*...*......
  .....*...*......
  ......*...*.....
  ......*...*.....
  ................
  ...**********...
  ..*..........*..
  .*............*.
  *..............*
  ****************
  ................

[display_glyph feedrate]
data:
  ................
  ................
  ................
  ......******....
  ....**********..
  ...****....****.
  ..***........**.
  .***..........*.
  .**..*..........
  ***...*.........
  **.....*........
  **......**......
  **......***.....
  **.......**.....
  ................
  ................

[gcode_macro G29]
gcode:
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE=default
    BED_MESH_PROFILE LOAD=default

[virtual_sdcard]
path: ~/gcode_files

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 10.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*#
#*# [extruder]
#*#
#*# [bed_mesh 20211201]
#*# version = 1
#*# points =
#*# 	0.042500, 0.145000, 0.240000, 0.350000, 0.415000
#*# 	-0.087500, 0.007500, 0.095000, 0.202500, 0.267500
#*# 	-0.017500, 0.075000, 0.162500, 0.262500, 0.330000
#*# tension = 0.2
#*# min_x = 35.0
#*# algo = lagrange
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 35.0
#*# x_count = 5
#*# max_y = 210.0
#*# mesh_x_pps = 2
#*# max_x = 220.0
#*#
#*# [heater_bed]
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.222500, 0.107500, 0.062500, -0.000000, -0.062500
#*# 	  0.185000, 0.045000, -0.040000, -0.147500, -0.252500
#*# 	  0.282500, 0.187500, 0.125000, 0.037500, 0.002500
#*# tension = 0.2
#*# min_x = 35.0
#*# algo = lagrange
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 35.0
#*# x_count = 5
#*# max_y = 210.0
#*# mesh_x_pps = 2
#*# max_x = 220.0
#*#
#*# [bed_mesh default_pei2]
#*# version = 1
#*# points =
#*# 	0.137500, 0.107500, 0.052500, 0.030000, 0.012500
#*# 	0.112500, 0.030000, 0.022500, -0.065000, -0.210000
#*# 	0.282500, 0.267500, 0.267500, 0.267500, 0.225000
#*# tension = 0.2
#*# min_x = 35.0
#*# algo = lagrange
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 35.0
#*# x_count = 5
#*# max_y = 210.0
#*# mesh_x_pps = 2
#*# max_x = 220.0
#*#
#*# [bed_mesh default_2]
#*# version = 1
#*# points =
#*# 	-0.117500, -0.105000, -0.067500, -0.010000, 0.027500
#*# 	-0.027500, -0.010000, 0.012500, 0.052500, 0.075000
#*# 	0.167500, 0.260000, 0.342500, 0.437500, 0.530000
#*# tension = 0.2
#*# min_x = 35.0
#*# algo = lagrange
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 35.0
#*# x_count = 5
#*# max_y = 210.0
#*# mesh_x_pps = 2
#*# max_x = 220.0
